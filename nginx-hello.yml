kind: Namespace
apiVersion: v1
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx

---

kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: nginx
  name: nginx-deployment
  labels:
    app.kubernetes.io/name: nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        prometheus-metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9113"
    spec:
      containers:
        - name: app
          image: cristianriano/nginxdemo
          ports:
            - containerPort: 80
        - name: prometheus-exporter
          # https://github.com/nginxinc/nginx-prometheus-exporter
          image: nginx/nginx-prometheus-exporter:0.8.0
          # Can be configiured either with flags or ENV variables
          args:
            - -nginx.scrape-uri=http://localhost:80/nginx_status
          # env:
          #   - name: SCRAPE_URI
          #     value: "http://localhost:80/nginx_status"
          ports:
            - name: exporter
              containerPort: 9113

---

kind: Service
apiVersion: v1
metadata:
  name: nginx-service
  namespace: nginx
spec:
  # https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  selector:
    app.kubernetes.io/name: nginx
  ports:
    - name: nginx
      protocol: TCP
      port: 80
      targetPort: 80

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: nginx-ingress
  namespace: nginx
spec:
  tls:
  - hosts:
    - nginx-example.com
    secretName: nginx-secret-tls
  rules:
  # Add more entries to the array for different domains or subdomains (one for each)
  - host: nginx-example.com
    http:
      paths:
      - path: '/'
        pathType: Prefix # or Exact
        backend:
          service:
            name: nginx-service
            port:
              # Either number or number
              name: nginx
              # number: 80

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: pod-exporter-ingress
  namespace: nginx
spec:
  podSelector:
    matchLabels:
      prometheus-metrics: "true"
      # app.kubernetes.io/name: nginx
  policyTypes:
    - Ingress
  ingress:
    - ports:
        - protocol: TCP
          port: 9113
      from:
        - podSelector:
            matchLabels:
              app: prometheus
              component: server
          namespaceSelector:
            matchLabels:
              name: prometheus

---

kind: Secret
apiVersion: v1
metadata:
  namespace: nginx
  name: nginx-secret-tls
type: kubernetes.io/tls
data:
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZyakNDQTVZQ0NRRDJjcTFqSTdMdFR6QU5CZ2txaGtpRzl3MEJBUXNGQURDQm1ERUxNQWtHQTFVRUJoTUMKUVZReER6QU5CZ05WQkFnTUJsWnBaVzV1WVRFUE1BMEdBMVVFQnd3R1ZtbGxibTVoTVJBd0RnWURWUVFLREFkdwpiR0YwYjJkdk1SUXdFZ1lEVlFRTERBdHpaWEoyWlhJZ2RHVmhiVEVhTUJnR0ExVUVBd3dSYm1kcGJuZ3RaWGhoCmJYQnNaUzVqYjIweEl6QWhCZ2txaGtpRzl3MEJDUUVXRkdOeWFYTjBhV0Z1UUhCc1lYUnZaMjh1WTI5dE1CNFgKRFRJeE1ETXhNakV3TXpBME0xb1hEVEl5TURNeE1qRXdNekEwTTFvd2daZ3hDekFKQmdOVkJBWVRBa0ZVTVE4dwpEUVlEVlFRSURBWldhV1Z1Ym1FeER6QU5CZ05WQkFjTUJsWnBaVzV1WVRFUU1BNEdBMVVFQ2d3SGNHeGhkRzluCmJ6RVVNQklHQTFVRUN3d0xjMlZ5ZG1WeUlIUmxZVzB4R2pBWUJnTlZCQU1NRVc1bmFXNTRMV1Y0WVcxd2JHVXUKWTI5dE1TTXdJUVlKS29aSWh2Y05BUWtCRmhSamNtbHpkR2xoYmtCd2JHRjBiMmR2TG1OdmJUQ0NBaUl3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFKa3lkSWRmRDhJTm1NM1ZTTTVIaGJ4TFFrSENqTGYyCkg1OWpxdkhCajNLR0MvSjJyN08xL2RiRUsvcmRxanVqVFByY3h6U2toSTQ5M3pXQzFtY3RoMGZjZ2dMYStPdmYKNU41bWlFeGhuZVlXOTIzcEMyZzJQRmdiMW0vRGptbFBhQlBoQ2Jxb1h3MlhFMUtmK0xWOGl5b3ZmRDJSUmF0NwpNS2ZkT3lSYXhQTjgvbzdOUEpLZG03NkJLbjF1K3VIQXFaT1BObE9sWTQ5SGhsT0J5ZksyZzhpSEJOTTBXYm5NCnpVdkltUVhlekM4dVFoK0RKVWZ4ekx4TFNGa00vYkZYUTkzSzdvdXlpMnZWUXdvaTNPWS9DcUdJRGRsYmxtSjcKMHM2bEljYlA4U1pRZmdiQ2l5cnJCU2xUc0dLci9kbWJGczdvS0FJU2M2T1FZUTVDQlBtUVBXK015YWw1VkRqcApaT2FkTE55LzlRSXlLZGVVbGlmRDkrRTZJRXY3T0dNNTg5eWVpTTZkL1E4WEtZaXBoVkdVN3lBdmJDcksxY1JSCmZZeG12dnNhVWhBRW5xaytWWlYwR21jK0FMZVlzV2dsMkl6eFRiS01VcEkrdnh1N2RGRG5iWjdmdGZJY0MrcG4Ka3h5M3FXSktacTc5UlB0TG1Ybmt0Y1hIcUU5aXZZTCtGYU9JNmhsYWdWZlVmdWlSc1ZWWHlsN0ZzR21BbDVPMgpVdVQvdDdhVHBqdXNISmo0NEpHeWgzbUdCODVzUkZTOUJYVUtHb2tnYmxzNU5ITW9LUlFvQkJLMS9KdDJocDlFCjIwVnNWSXgzc0M1Wk43Z3RjaDhSNkFkOER0Wm9tQlNDTkxuTXhFdjF6ZU40amIxdU9ESFVnMHJEMmtiVmt2VFYKMVRQR3JKaVNSa3B4QWdNQkFBRXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBRmNHNjVxYWR0ZnU5ME15eGNHMgpiZXI4WFpLODNEeDVNalFDdVRuNDVDeWU0MjM3cGlZT2VqU1JJNmtJUWN1L3NOZDJSSmdQbVhWRm5TeWFvcXlJCmwvTlM2enRsTW8zTStWTjNMK2NZU2FJczJJaUIremZrb1dmWXp4VEVJOWtjK3VqajA0UThrUnBLSVhEZjhhUDAKcnE5Qy9kU2grcGhYdDYxWEg1MzJMRHJRaytLMVJkRFJUYnFtTVI4T0hJUHhXUXBlV3pKU082SWhPT2lLV3hzegpUV25DOFJoNXNmRjY1NkszTEVob090WUQzUEFZN2NQb0dmNWFTaFZOR014NjF4MHVYUVc5M29TSGFPU3MrRGpmCjVWdjFITi8zazFpUyszeEhnWU0zWHlJN0hCVVBDYisyRFhRS1VmZ2VRL1g2M1ppZ1E0SXp5c0JBTFB1TlRaMisKTEZtdnFZY3c4RFExNmwzRTl2NnU0bnJBcjRSeE9pTWZ3Ym9ZWEQzaE81VzY1SHhOVzVZRWorZGQ3MHdCTUNtbgphU2pRUktZYXQ1QzJFY3VoUTU4c3V6T0h2Sm9iK1ZGVlB0N0JXREJOYTdoR1M5QnJOeXF4Qk1NUVk5cmgrNENwCkp4cnlZZWcrTlRHTGVSbERhamp3Zkl3azdTdERkRHNKZlYzd1Vxd2dLeFdLM3N2MFV1angxVHRFRGdib3dYTGoKUXFQREdXVGozT2RVL3lZZFRsMzJuZW8wamN0YndERFkwKzBqNkJlam9sWk12NWkwSjFoK25ibERjWVhrNWtvVwozWEw0SkpMd0s3Y2FjZTYvSjhuMlRkenYrWWN0WnVuRk03cnN6Y2g2NkwyY3FQLzNZWHBCMlJLWkNUSmRRVTVUCkZ5VkhPeXdBRHV1c0ZLSnJLNFhTNnNBSwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: |
    LS0tLS1CRUdJTiBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQpNSUlKbnpCSkJna3Foa2lHOXcwQkJRMHdQREFiQmdrcWhraUc5dzBCQlF3d0RnUUlLOHhwU2hoRUdyRUNBZ2dBCk1CMEdDV0NHU0FGbEF3UUJLZ1FRQkFUNlVMZTB0RVoyR1NmYzBLOU9RQVNDQ1ZBMHVYOFpmQjlOQ29ZVFlQUWIKeVNOc2duai9PR1k0YVJHNGhDcE1sVURkS2d2QmRDOCtmeTFjbklZblNMSjU1TE84dmtoWmJjbU9zcmhDOFVkTgprZGtvVWdhL2dIZ2hZc3NwRVVTbmg2ZktWa3ltSkViWlpkaW4yWmhQU0RVUXVYOThaMzZoTjk0M3orSFZHdTV4CnQ4SHUyZ2VqSys1dHJMZCtUSFhDWGNwRExDdWhDeTU2MThOeFQ5Ui9lTUs1ZVFpcER6TUJtMXVxLytYeFVoZ2wKemp1eW1Ib2NiNXJvR0FpcEhGVjRQamZaYmdsWTBFZHg2VjIxajJEWlZaK2Y4QlA0M1lzV2xUUFZQa2NITW9RMgpydEtRc1hqZWxncDZLVEsxT2NZdy9uUy9HeVJNOERmd3hUazdaZ3ZtTVZUcGpFSWFXdW1wMnNpSjJkWnNnWEs1CnlXcWNERU5SamlXQWQyTDRvcnYraGVRSWN0K2FvRmdUMnYrVEQvSlBNQUhkb01xMHBHZEE0cXdCbGdoektGbUIKRzFaQ3NLQU5YUHV4engyVkVrS2xPM3RVYVJnU3pJUXAyeGZuaGRFaXk3SzRxcG9zNU1YMHl3VndaRFZ3Yk9NZQpQK1N1eHY1K283cnhZYWczZCtickRvT2dETDZYNGpMeE5yWXlHcVJ6TllYa3hoRytrcGNpY2p4M3d5b01Ja3pUCmRpN0JaSUxsdkVKNE9pZVNGM0RuaUFwdlRtN2s1WjVlTStNaTVtamRGSVJrRmZQR3hsbU9MTDUrUm1pWWVlS2QKMk44VkIwbGRZa2x6aFFpUmsxa1NRVVkwOXdNZnBFVGw1ZHdrWVdjUUJvaFplQzZ6MmNqSVB0ckwzZ0dmVDVyYwp3M2lEUjJkaTBWZmlNdkFnR1NjVzc2cWpYNVg0alZSMHNtdStaK1Z5c0s5eXJlMnRIK1NBcE5oSnh0SnRIeHZLCi9CWDFaUU9PZ25DWkxxenVqcHBQVUZ3ZmIxa3d0aUVVc1NKWHM1dHl6eCtPNUNtZVEvTEZaQ1NMZHZ5KzNOZGoKUFZPak5jU1hGYUZtcXNXTzNYTUNyR1BLYTJVQmZTanhObEc1MlhsV2RkTmMyVmFMdDFQdjBPRDlDaE02OUdQMgo2d1kvODYrOElzZ0wwOW8wa08zS2dNSi9SZS9UMU1CRWNKSjFpQ2trbWt0TWRaVndCeGVMZnRKWXA0TUJ6eStICmxMWFBCbG93QVVBbjAvNWpuWHdWbmVIVXE3Mm5NZTZvdk5jRmV3eFNDZHI3d3ljRzRDYzRqUWkvQnRnQ0Q1TlUKRkxLNm9nMWVCazNMUVFOTElVR2p3Yis2WmliUHhmYTNacDdRT0JQOWVzeWJQb2tpanV3TlFCRzRVVXEzdUMrcQpiYVVrSE9hRUNKaG5BN1JQaUVsVjE0NmwxRm4xSUhscXlSUi9icVZOZmZrdlBZRHg3cFlYZTBuRWdDQWxxSVVGCkVsUmIwKzJNNVVkUUptNFhWOUh2K29DL0xEcG1DOUZOOURvRFh1L2VrU1JBZzNubWVCbE84b3J3MVVSMGZFL2MKbEhGZDNMeitiUVJINENTcEtHRW5Iclk1YWlVZERINUxSU0w2ZGhHM3VSN3ZUOEhyVGY0Rkx1WTJjTE0yVGRYbgp0TnhYTnhQSkJ6WHN0bCtmWDFERnA4LzV0aEt0SGtGa05BT0k2T3oyUzRRM1l0QjhXVVBNUmRsMHk5Qjh1T0VHCmROOFpTR0lTR3V0dmVMckhVeUtZZHBrS29PNmtGbjY5SEUxTFllcnVpRXIxSE9KeVhvZjc5S3dQVjI5QW5MNUQKcUxBN0doSjlHb0Z5Z3ArMDJjSWdUVU1QSTZ1OXNaaW5UZkR5NWpoL1d6S2tPYlBXMDUya3dwZzZ3Y0Fqak5JVQpPV2drcm1BNUpteklubUp1bFNwV2l4ZmVlYkgzVmJhaU81cnExNG5aZ1p6YTFhQkVQS3l0SEQwell1WXQzZU9wCnRWQmIzMjJYWnhBZG5TWUsxN0ZRLy9CaW92R252Y0t2ZGpQZmZ1UVYvSnZFVEFETHh0ZllGRmZDM1ZDYWkwa1oKWW9TRFZMYTJnbFE2U2loOHpNdUhzakU2bXpCenZad08wMTlTOHdOTklDRWJ6N0ZxOVQxSk1DRGJuTTJyTGNwWQpiT1pRZ3pKZEsxb3FYV1BhaTZiMitEblhMZC9oOTMyclZSdHVqLzY3eGtWZURpbHUwVytualpiMmkwUS9tWDJ2ClExQ0FPUVE0clN1bG5Kc2dGQnZZa0RLci94UnhyYkkvVGoxbmN2YmUzMERodWNLbjVsL2ZWcGRocTdIWDFVUkcKdDEwRE5UMjkwQnZMa2h2VDU5MkFveURKNUs1TkQzbVpWY1lWdUtteHlDSjV6anpUNjMrN09DWG5SZkRuQWtmMgpUNDRuUUdobVJOdTU3NFZUMmlXOVNic2F2S0RXL1R2RFRsWWJyZlB5UHFaUHIwbEpsZGFQcWFlcEp5ekdyOExNCnVINC9wQlNvSXVQdVp4b2pRZHpHM1BRTVVCamU4alhyZ3orVThrQS9rUC83RHc4Z3RZdGU5L0ZQSjFvUlBiZngKdlVHalpBL1VPcXNTOGNqTnNyR0lKTlkxd29xK2lKRjRkc3RTWWpXL1UyUWRxM2doNEZLMDBkWC82K2IzWmFSQwpUZ0dvQ3ltejZMb3RsSStTTmZVN1Jkd2U1bVpDYmpEaHQzRTBQMHJiUUs2V3doWkZIbWFGNzJhWDhocVBLcmFlCm0zUEpFb0g3K3p3cUVERlJ6Q1hlSTNFNU9MazVrQTNQUWlBSTZ0ckcwUGw5Skt2TE9tckJLOXU2MVdxU1YyWXAKd1owemU5Z3pwWjlQMjJFZFFwZGJMRnBCcFgwWnhYL092dCs3UytpSzRDVUVJRWkxaDN4QjlMVzN3aURhbDdCNApIVzhaZkUzU0ppdkpGWEtDMkEzenpiUzRjRmV6SVZ6N0xDQmJpdWEvTFRiVkFsQ1FmanE2MUZOMjZHa2docWh3CnpxTlh5YWg3bVJORlpxQTlDdk9nQTJjelRzMTBaVEVhMWQ0OE0rc1cwVU84a1hBdWh1eHhGUG5PN1phTHhIWHUKNjREOG4vZHk2NExEVnBkZXpIYlM2UzVJSlhxY3RHd1V5UTJ4OWtvNnUrWmhlR3QwMTkyOU9oemVzUTJXM0NOVwplUmxGZ3UvMWZJTlpsY3oyTXNERi9YRXpsOUlxQmNRbEx1d1g0VWNGL2FnbzFueFFwSmdDSHZTYjlieTE2RDFXCmJjb0Y1cWZJYUI5T1hoSHYvQzEwMHRxMkN0ZGJqemJvdlRaS3JsczFYQ3N4TTFhZCtCd1d2Vk13c1B3QTZCbzIKRDl2Z2VYdzBnY3lESEJpbExHbkw5Q2VDa1FYN1ZtNHoyMEU1M1F3WkNsb05vSUdsank1VUhYMDA1aXUwQnBYeAp2ZlR1cEQzTlBsdng5MEpNUU1JMUhXRjVLYzZ3dzJNZVFUT1ZEcHdUNmRwWVd0bEgxODJBa2lCV1o2V3d4RWIzCkh6SkJ3U09NajkxeUFBS1pGS1g5N3U3N05jRlptMWdqYWd5TW9ZcVhlTWVxTnh6U0hpSFJUZlRPZmJvYjRXZlEKQVpvZXV6bXF4RERndkhHUHNtZTVMeEo0bUFIcDI1TzJMU09WMUNENkxEb21sQkN4SThuWFBCRE1OQzF3Z21hcAp1dGZQK21PL09GQktSVEMxdy9rbDAyODNPZnRXTGNFNHlVYjVrQ0xFaEhiTVo2OVN1SVppYkdNUENGNHQzS29WCjJ5aTdJUWJQbTFzdGhPeElyT2FTY2Y5SklDY2VpWUl3V2hMaGYvVzdrMnYrbVRxL0FMckR6b3hiY1pYblRveEUKS0NSWHhqSUtHakxVMElPcFRLTEtsVDBmQkhuSXpYdGZBM1NEWktvRDNUTmNMREdOb1NjZnJDNlpoQUs4eDJTSAplTkFrdzVlVm42akZJS3I0WGFWZDM3WUlFZlpKM3krdERhakY3Z1VNcWJVZ2NqbzAvMnNYWm40ZzYvdDhHRDQvCnRIR0trdEk4SHpSMTkzNTBEK3VId0hFOWQwR3BEcXJJTnJHYnFxQXA3UUZ5ZmxwamxDTWg3TFZpZWpIN0ErcUIKUXdPc1hTOGxMWG5zeGp2azlWQ2tOclRBcEdRVkVzR2NxWDRINDRJRXNHYnVFN1p2SGJ1MEFEcGtHS2xBT1lEYQpyMzI5WTVsRURzTHUrc0pFSnd0MlZJUXpGUT09Ci0tLS0tRU5EIEVOQ1JZUFRFRCBQUklWQVRFIEtFWS0tLS0tCg==
