kind: Namespace
apiVersion: v1
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx

---

kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: nginx
  name: nginx-deployment
  labels:
    app.kubernetes.io/name: nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        prometheus-metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9113"
    spec:
      containers:
        - name: app
          image: cristianriano/nginxdemo
          ports:
            - containerPort: 80
        - name: prometheus-exporter
          # https://github.com/nginxinc/nginx-prometheus-exporter
          image: nginx/nginx-prometheus-exporter:0.8.0
          # Can be configiured either with flags or ENV variables
          args:
            - -nginx.scrape-uri=http://localhost:80/nginx_status
          # env:
          #   - name: SCRAPE_URI
          #     value: "http://localhost:80/nginx_status"
          ports:
            - name: exporter
              containerPort: 9113

---

kind: Service
apiVersion: v1
metadata:
  name: nginx-service
  namespace: nginx
spec:
  # Choose the type from https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  # ClusterIP: Exposes the service on a internal IP, is the default one (not reachable from outside)
  type: ClusterIP
  selector:
    app.kubernetes.io/name: nginx
  ports:
    - name: nginx
      protocol: TCP
      port: 80
      targetPort: 80

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: pod-exporter-ingress
  namespace: nginx
spec:
  podSelector:
    matchLabels:
      prometheus-metrics: "true"
      # app.kubernetes.io/name: nginx
  policyTypes:
    - Ingress
  ingress:
    - ports:
        - protocol: TCP
          port: 9113
      from:
        - podSelector:
            matchLabels:
              app: prometheus
              component: server
          namespaceSelector:
            matchLabels:
              name: prometheus
