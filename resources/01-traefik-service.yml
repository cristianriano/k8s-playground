kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-deployment
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-account
      containers:
        - name: traefik
          image: traefik:v2.9
          args:
            # Insecure exposes the dashboard on port 8080
            - --api.insecure
            - --providers.kubernetesingress
          ports:
            - name: web
              containerPort: 80
            - name: dashboard
              containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard-service

spec:
  # LoadBalancer exposes the Service externally using a cloud provider's load balancer. For Minikube we need to use Minikube tunnel
  # https://minikube.sigs.k8s.io/docs/handbook/accessing/#loadbalancer-access
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: dashboard
  selector:
    app: traefik

---

apiVersion: v1
kind: Service
metadata:
  name: traefik-web-service

spec:
  type: LoadBalancer
  ports:
    - targetPort: web
      port: 80
  selector:
    app: traefik

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: traefik-access-to-nginx
spec:
  podSelector:
    matchLabels:
      app: traefik
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: nginx
